{
    "projects": {
        "default": {
            "import_default": 1,
            "import_overrides": {},
            "import_local": 1
        },
        "instructorProjectName": {
            "import_default": 1,
            "import_overrides": {},
            "import_local": 1
        },
        "studentProjectName": {
            "import_default": 1,
            "import_overrides": {},
            "import_local": 1
        }
    },
    "tests": {
        "fancy_assertion": {
            "type": "walk_ast",
            "arguments": {
                "test_project": {
                    "node_id": "project",
                    "project_name": "instructorProjectName",
                    "project_entrypoint": "main.py",
                    "project_arguments": {},
                    "project_inputs": []
                },
                "pattern": {
                    "node_id": "ast_pattern",
                    "node_type": "while",
                    "pattern": {
                        "node_type": "while",
                        "match_kind": "test_patterns",
                        "test_patterns": [
                            {
                                "node_id": "ast_pattern",
                                "node_type": "constant"
                            }, {
                                "node_id": "ast_pattern",
                                "node_type": "name"
                            }
                        ]
                    }
                }
            },
            "found": {
                "node_id": "block",
                "nodes": [
                    {
                        "node_id": "post_message",
                        "criterion": "structure",
                        "node_message": "I am are monkey: {a_data['factor']:.2f}"
                    },
                    {
                        "node_id": "post_grade_modifier",
                        "criterion": "structure",
                        "modifier_type": "overkill",
                        "modifier_value": 1,
                        "max_value": 1,
                        "passes": false
                    }
                ]
            },
            "notFound": {
                "node_id": "block",
                "nodes": []
            }
        },
        "first_assertion": {
            "type": "assert_output",
            "arguments": {
                "test_project": {
                    "node_id": "project",
                    "project_name": "instructorProjectName",
                    "project_entrypoint": "main.py",
                    "project_arguments": {
                        "node_id": "dictionary",
                        "nodes": {}
                    },
                    "project_inputs": []
                },
                "stdout": {
                    "node_id": "literal",
                    "literal_type": "string",
                    "literal_value": "a"
                },
                "stderr": {
                    "node_id": "literal",
                    "literal_type": "string",
                    "literal_value": "b"
                },
                "return_code": {
                    "node_id": "literal",
                    "literal_type": "string",
                    "literal_value": "[0-9]*"
                }
            }
        },
        "second_assertion": {
            "type": "assert_output",
            "arguments": {
                "test_project": {
                    "node_id": "project",
                    "project_name": "studentProjectName",
                    "project_entrypoint": "main.py",
                    "project_arguments": {
                        "node_id": "dictionary",
                        "nodes": {}
                    },
                    "project_inputs": []
                },
                "stdout": {
                    "node_id": "literal",
                    "literal_type": "string",
                    "literal_value": "a"
                },
                "stderr": {
                    "node_id": "literal",
                    "literal_type": "string",
                    "literal_value": "b"
                },
                "return_code": {
                    "node_id": "literal",
                    "literal_type": "string",
                    "literal_value": "c"
                }
            }
        },
        "first_comparison": {
            "type": "compare_output",
            "arguments": {
                "base_project": {
                    "node_id": "project",
                    "project_name": "instructorProjectName",
                    "project_entrypoint": "main.py",
                    "project_arguments": {
                        "node_id": "dictionary",
                        "nodes": {}
                    },
                    "project_inputs": []
                },
                "test_project": {
                    "node_id": "project",
                    "project_name": "studentProjectName",
                    "project_entrypoint": "main.py",
                    "project_arguments": {
                        "node_id": "dictionary",
                        "nodes": {}
                    },
                    "project_inputs": []
                },
                "stdout": {
                    "node_id": "literal",
                    "literal_type": "string",
                    "literal_value": "a"
                },
                "stderr": {
                    "node_id": "literal",
                    "literal_type": "string",
                    "literal_value": "b"
                },
                "return_code": {
                    "node_id": "literal",
                    "literal_type": "string",
                    "literal_value": "c"
                }
            }
        }
    },
    "criteria": {
        "foo": 1
    }
}